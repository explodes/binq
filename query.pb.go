// Code generated by protoc-gen-go. DO NOT EDIT.
// source: query.proto

package binq

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	descriptor "github.com/golang/protobuf/protoc-gen-go/descriptor"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// ReturnType indicates the data type returned from evaluating an expression.
type ReturnType int32

const (
	ReturnType_RETURN_TYPE_UNKNOWN ReturnType = 0
	ReturnType_RETURN_TYPE_BOOL    ReturnType = 1
	ReturnType_RETURN_TYPE_U64     ReturnType = 2
	ReturnType_RETURN_TYPE_U32     ReturnType = 3
	ReturnType_RETURN_TYPE_U16     ReturnType = 4
	ReturnType_RETURN_TYPE_U8      ReturnType = 5
)

var ReturnType_name = map[int32]string{
	0: "RETURN_TYPE_UNKNOWN",
	1: "RETURN_TYPE_BOOL",
	2: "RETURN_TYPE_U64",
	3: "RETURN_TYPE_U32",
	4: "RETURN_TYPE_U16",
	5: "RETURN_TYPE_U8",
}

var ReturnType_value = map[string]int32{
	"RETURN_TYPE_UNKNOWN": 0,
	"RETURN_TYPE_BOOL":    1,
	"RETURN_TYPE_U64":     2,
	"RETURN_TYPE_U32":     3,
	"RETURN_TYPE_U16":     4,
	"RETURN_TYPE_U8":      5,
}

func (x ReturnType) String() string {
	return proto.EnumName(ReturnType_name, int32(x))
}

func (ReturnType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_5c6ac9b241082464, []int{0}
}

type Endianness int32

const (
	Endianness_ENDIANNESS_UNKNOWN Endianness = 0
	Endianness_ENDIANNESS_LITTLE  Endianness = 1
	Endianness_ENDIANNESS_BIG     Endianness = 2
)

var Endianness_name = map[int32]string{
	0: "ENDIANNESS_UNKNOWN",
	1: "ENDIANNESS_LITTLE",
	2: "ENDIANNESS_BIG",
}

var Endianness_value = map[string]int32{
	"ENDIANNESS_UNKNOWN": 0,
	"ENDIANNESS_LITTLE":  1,
	"ENDIANNESS_BIG":     2,
}

func (x Endianness) String() string {
	return proto.EnumName(Endianness_name, int32(x))
}

func (Endianness) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_5c6ac9b241082464, []int{1}
}

// Op is an operation to perform between two expressions.
type BinaryOpCode int32

const (
	BinaryOpCode_BINARY_OP_CODE_UNKNOWN    BinaryOpCode = 0
	BinaryOpCode_BINARY_OP_CODE_EQ         BinaryOpCode = 1
	BinaryOpCode_BINARY_OP_CODE_NEQ        BinaryOpCode = 2
	BinaryOpCode_BINARY_OP_CODE_LESS       BinaryOpCode = 3
	BinaryOpCode_BINARY_OP_CODE_LESS_EQ    BinaryOpCode = 4
	BinaryOpCode_BINARY_OP_CODE_GREATER    BinaryOpCode = 5
	BinaryOpCode_BINARY_OP_CODE_GREATER_EQ BinaryOpCode = 6
)

var BinaryOpCode_name = map[int32]string{
	0: "BINARY_OP_CODE_UNKNOWN",
	1: "BINARY_OP_CODE_EQ",
	2: "BINARY_OP_CODE_NEQ",
	3: "BINARY_OP_CODE_LESS",
	4: "BINARY_OP_CODE_LESS_EQ",
	5: "BINARY_OP_CODE_GREATER",
	6: "BINARY_OP_CODE_GREATER_EQ",
}

var BinaryOpCode_value = map[string]int32{
	"BINARY_OP_CODE_UNKNOWN":    0,
	"BINARY_OP_CODE_EQ":         1,
	"BINARY_OP_CODE_NEQ":        2,
	"BINARY_OP_CODE_LESS":       3,
	"BINARY_OP_CODE_LESS_EQ":    4,
	"BINARY_OP_CODE_GREATER":    5,
	"BINARY_OP_CODE_GREATER_EQ": 6,
}

func (x BinaryOpCode) String() string {
	return proto.EnumName(BinaryOpCode_name, int32(x))
}

func (BinaryOpCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_5c6ac9b241082464, []int{2}
}

type ValueType int32

const (
	ValueType_VALUE_TYPE_UNKNOWN ValueType = 0
	ValueType_VALUE_TYPE_U64LE   ValueType = 1
	ValueType_VALUE_TYPE_U64BE   ValueType = 2
	ValueType_VALUE_TYPE_U32LE   ValueType = 3
	ValueType_VALUE_TYPE_U32BE   ValueType = 4
	ValueType_VALUE_TYPE_U16LE   ValueType = 5
	ValueType_VALUE_TYPE_U16BE   ValueType = 6
	ValueType_VALUE_TYPE_U8      ValueType = 7
)

var ValueType_name = map[int32]string{
	0: "VALUE_TYPE_UNKNOWN",
	1: "VALUE_TYPE_U64LE",
	2: "VALUE_TYPE_U64BE",
	3: "VALUE_TYPE_U32LE",
	4: "VALUE_TYPE_U32BE",
	5: "VALUE_TYPE_U16LE",
	6: "VALUE_TYPE_U16BE",
	7: "VALUE_TYPE_U8",
}

var ValueType_value = map[string]int32{
	"VALUE_TYPE_UNKNOWN": 0,
	"VALUE_TYPE_U64LE":   1,
	"VALUE_TYPE_U64BE":   2,
	"VALUE_TYPE_U32LE":   3,
	"VALUE_TYPE_U32BE":   4,
	"VALUE_TYPE_U16LE":   5,
	"VALUE_TYPE_U16BE":   6,
	"VALUE_TYPE_U8":      7,
}

func (x ValueType) String() string {
	return proto.EnumName(ValueType_name, int32(x))
}

func (ValueType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_5c6ac9b241082464, []int{3}
}

// Query is a query to execute over a range of binary key-value data.
type Query struct {
	// start is the minimum key to search, inclusive.
	Start []byte `protobuf:"bytes,1,opt,name=start,proto3" json:"start,omitempty"`
	// end is the maximum key to search, exclusive.
	End []byte `protobuf:"bytes,2,opt,name=end,proto3" json:"end,omitempty"`
	// query_options are additional options for this query.
	QueryOptions *Options `protobuf:"bytes,3,opt,name=query_options,json=queryOptions,proto3" json:"query_options,omitempty"`
	// predicate is the filter to apply to each record.
	Predicate            *Predicate `protobuf:"bytes,4,opt,name=predicate,proto3" json:"predicate,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Query) Reset()         { *m = Query{} }
func (m *Query) String() string { return proto.CompactTextString(m) }
func (*Query) ProtoMessage()    {}
func (*Query) Descriptor() ([]byte, []int) {
	return fileDescriptor_5c6ac9b241082464, []int{0}
}

func (m *Query) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Query.Unmarshal(m, b)
}
func (m *Query) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Query.Marshal(b, m, deterministic)
}
func (m *Query) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Query.Merge(m, src)
}
func (m *Query) XXX_Size() int {
	return xxx_messageInfo_Query.Size(m)
}
func (m *Query) XXX_DiscardUnknown() {
	xxx_messageInfo_Query.DiscardUnknown(m)
}

var xxx_messageInfo_Query proto.InternalMessageInfo

func (m *Query) GetStart() []byte {
	if m != nil {
		return m.Start
	}
	return nil
}

func (m *Query) GetEnd() []byte {
	if m != nil {
		return m.End
	}
	return nil
}

func (m *Query) GetQueryOptions() *Options {
	if m != nil {
		return m.QueryOptions
	}
	return nil
}

func (m *Query) GetPredicate() *Predicate {
	if m != nil {
		return m.Predicate
	}
	return nil
}

// Options specifies additional options for a query.
type Options struct {
	// limit determines the maximum number of results.
	// A missing value, or 0, indicates no limit.
	Limit                uint64   `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Options) Reset()         { *m = Options{} }
func (m *Options) String() string { return proto.CompactTextString(m) }
func (*Options) ProtoMessage()    {}
func (*Options) Descriptor() ([]byte, []int) {
	return fileDescriptor_5c6ac9b241082464, []int{1}
}

func (m *Options) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Options.Unmarshal(m, b)
}
func (m *Options) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Options.Marshal(b, m, deterministic)
}
func (m *Options) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Options.Merge(m, src)
}
func (m *Options) XXX_Size() int {
	return xxx_messageInfo_Options.Size(m)
}
func (m *Options) XXX_DiscardUnknown() {
	xxx_messageInfo_Options.DiscardUnknown(m)
}

var xxx_messageInfo_Options proto.InternalMessageInfo

func (m *Options) GetLimit() uint64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

// Predicate defines a set of expressions to apply to the values of key-value binary data.
// A predicates root expression must represent a boolean value.
type Predicate struct {
	// Types that are valid to be assigned to Predicate:
	//	*Predicate_Expression
	//	*Predicate_Any
	//	*Predicate_All
	Predicate            isPredicate_Predicate `protobuf_oneof:"predicate"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *Predicate) Reset()         { *m = Predicate{} }
func (m *Predicate) String() string { return proto.CompactTextString(m) }
func (*Predicate) ProtoMessage()    {}
func (*Predicate) Descriptor() ([]byte, []int) {
	return fileDescriptor_5c6ac9b241082464, []int{2}
}

func (m *Predicate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Predicate.Unmarshal(m, b)
}
func (m *Predicate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Predicate.Marshal(b, m, deterministic)
}
func (m *Predicate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Predicate.Merge(m, src)
}
func (m *Predicate) XXX_Size() int {
	return xxx_messageInfo_Predicate.Size(m)
}
func (m *Predicate) XXX_DiscardUnknown() {
	xxx_messageInfo_Predicate.DiscardUnknown(m)
}

var xxx_messageInfo_Predicate proto.InternalMessageInfo

type isPredicate_Predicate interface {
	isPredicate_Predicate()
}

type Predicate_Expression struct {
	Expression *Expression `protobuf:"bytes,1,opt,name=expression,proto3,oneof"`
}

type Predicate_Any struct {
	Any *Expressions `protobuf:"bytes,2,opt,name=any,proto3,oneof"`
}

type Predicate_All struct {
	All *Expressions `protobuf:"bytes,3,opt,name=all,proto3,oneof"`
}

func (*Predicate_Expression) isPredicate_Predicate() {}

func (*Predicate_Any) isPredicate_Predicate() {}

func (*Predicate_All) isPredicate_Predicate() {}

func (m *Predicate) GetPredicate() isPredicate_Predicate {
	if m != nil {
		return m.Predicate
	}
	return nil
}

func (m *Predicate) GetExpression() *Expression {
	if x, ok := m.GetPredicate().(*Predicate_Expression); ok {
		return x.Expression
	}
	return nil
}

func (m *Predicate) GetAny() *Expressions {
	if x, ok := m.GetPredicate().(*Predicate_Any); ok {
		return x.Any
	}
	return nil
}

func (m *Predicate) GetAll() *Expressions {
	if x, ok := m.GetPredicate().(*Predicate_All); ok {
		return x.All
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Predicate) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Predicate_OneofMarshaler, _Predicate_OneofUnmarshaler, _Predicate_OneofSizer, []interface{}{
		(*Predicate_Expression)(nil),
		(*Predicate_Any)(nil),
		(*Predicate_All)(nil),
	}
}

func _Predicate_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Predicate)
	// predicate
	switch x := m.Predicate.(type) {
	case *Predicate_Expression:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Expression); err != nil {
			return err
		}
	case *Predicate_Any:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Any); err != nil {
			return err
		}
	case *Predicate_All:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.All); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Predicate.Predicate has unexpected type %T", x)
	}
	return nil
}

func _Predicate_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Predicate)
	switch tag {
	case 1: // predicate.expression
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Expression)
		err := b.DecodeMessage(msg)
		m.Predicate = &Predicate_Expression{msg}
		return true, err
	case 2: // predicate.any
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Expressions)
		err := b.DecodeMessage(msg)
		m.Predicate = &Predicate_Any{msg}
		return true, err
	case 3: // predicate.all
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Expressions)
		err := b.DecodeMessage(msg)
		m.Predicate = &Predicate_All{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Predicate_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Predicate)
	// predicate
	switch x := m.Predicate.(type) {
	case *Predicate_Expression:
		s := proto.Size(x.Expression)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Predicate_Any:
		s := proto.Size(x.Any)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Predicate_All:
		s := proto.Size(x.All)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Value represent a node in an expression tree.
type Expression struct {
	// Types that are valid to be assigned to Expression:
	//	*Expression_BinaryOperation
	//	*Expression_Value
	//	*Expression_Scalar
	Expression           isExpression_Expression `protobuf_oneof:"expression"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *Expression) Reset()         { *m = Expression{} }
func (m *Expression) String() string { return proto.CompactTextString(m) }
func (*Expression) ProtoMessage()    {}
func (*Expression) Descriptor() ([]byte, []int) {
	return fileDescriptor_5c6ac9b241082464, []int{3}
}

func (m *Expression) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Expression.Unmarshal(m, b)
}
func (m *Expression) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Expression.Marshal(b, m, deterministic)
}
func (m *Expression) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Expression.Merge(m, src)
}
func (m *Expression) XXX_Size() int {
	return xxx_messageInfo_Expression.Size(m)
}
func (m *Expression) XXX_DiscardUnknown() {
	xxx_messageInfo_Expression.DiscardUnknown(m)
}

var xxx_messageInfo_Expression proto.InternalMessageInfo

type isExpression_Expression interface {
	isExpression_Expression()
}

type Expression_BinaryOperation struct {
	BinaryOperation *BinaryOperation `protobuf:"bytes,1,opt,name=binary_operation,json=binaryOperation,proto3,oneof"`
}

type Expression_Value struct {
	Value *Value `protobuf:"bytes,2,opt,name=value,proto3,oneof"`
}

type Expression_Scalar struct {
	Scalar *Scalar `protobuf:"bytes,3,opt,name=scalar,proto3,oneof"`
}

func (*Expression_BinaryOperation) isExpression_Expression() {}

func (*Expression_Value) isExpression_Expression() {}

func (*Expression_Scalar) isExpression_Expression() {}

func (m *Expression) GetExpression() isExpression_Expression {
	if m != nil {
		return m.Expression
	}
	return nil
}

func (m *Expression) GetBinaryOperation() *BinaryOperation {
	if x, ok := m.GetExpression().(*Expression_BinaryOperation); ok {
		return x.BinaryOperation
	}
	return nil
}

func (m *Expression) GetValue() *Value {
	if x, ok := m.GetExpression().(*Expression_Value); ok {
		return x.Value
	}
	return nil
}

func (m *Expression) GetScalar() *Scalar {
	if x, ok := m.GetExpression().(*Expression_Scalar); ok {
		return x.Scalar
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Expression) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Expression_OneofMarshaler, _Expression_OneofUnmarshaler, _Expression_OneofSizer, []interface{}{
		(*Expression_BinaryOperation)(nil),
		(*Expression_Value)(nil),
		(*Expression_Scalar)(nil),
	}
}

func _Expression_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Expression)
	// expression
	switch x := m.Expression.(type) {
	case *Expression_BinaryOperation:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.BinaryOperation); err != nil {
			return err
		}
	case *Expression_Value:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Value); err != nil {
			return err
		}
	case *Expression_Scalar:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Scalar); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Expression.Expression has unexpected type %T", x)
	}
	return nil
}

func _Expression_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Expression)
	switch tag {
	case 1: // expression.binary_operation
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(BinaryOperation)
		err := b.DecodeMessage(msg)
		m.Expression = &Expression_BinaryOperation{msg}
		return true, err
	case 2: // expression.value
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Value)
		err := b.DecodeMessage(msg)
		m.Expression = &Expression_Value{msg}
		return true, err
	case 3: // expression.scalar
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Scalar)
		err := b.DecodeMessage(msg)
		m.Expression = &Expression_Scalar{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Expression_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Expression)
	// expression
	switch x := m.Expression.(type) {
	case *Expression_BinaryOperation:
		s := proto.Size(x.BinaryOperation)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Expression_Value:
		s := proto.Size(x.Value)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Expression_Scalar:
		s := proto.Size(x.Scalar)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Expressions is a container for multiple expressions.
type Expressions struct {
	Expressions          []*Expression `protobuf:"bytes,1,rep,name=expressions,proto3" json:"expressions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Expressions) Reset()         { *m = Expressions{} }
func (m *Expressions) String() string { return proto.CompactTextString(m) }
func (*Expressions) ProtoMessage()    {}
func (*Expressions) Descriptor() ([]byte, []int) {
	return fileDescriptor_5c6ac9b241082464, []int{4}
}

func (m *Expressions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Expressions.Unmarshal(m, b)
}
func (m *Expressions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Expressions.Marshal(b, m, deterministic)
}
func (m *Expressions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Expressions.Merge(m, src)
}
func (m *Expressions) XXX_Size() int {
	return xxx_messageInfo_Expressions.Size(m)
}
func (m *Expressions) XXX_DiscardUnknown() {
	xxx_messageInfo_Expressions.DiscardUnknown(m)
}

var xxx_messageInfo_Expressions proto.InternalMessageInfo

func (m *Expressions) GetExpressions() []*Expression {
	if m != nil {
		return m.Expressions
	}
	return nil
}

// Predicates is a container for multiple predicates.
type Predicates struct {
	Predicates           []*Predicate `protobuf:"bytes,1,rep,name=predicates,proto3" json:"predicates,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Predicates) Reset()         { *m = Predicates{} }
func (m *Predicates) String() string { return proto.CompactTextString(m) }
func (*Predicates) ProtoMessage()    {}
func (*Predicates) Descriptor() ([]byte, []int) {
	return fileDescriptor_5c6ac9b241082464, []int{5}
}

func (m *Predicates) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Predicates.Unmarshal(m, b)
}
func (m *Predicates) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Predicates.Marshal(b, m, deterministic)
}
func (m *Predicates) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Predicates.Merge(m, src)
}
func (m *Predicates) XXX_Size() int {
	return xxx_messageInfo_Predicates.Size(m)
}
func (m *Predicates) XXX_DiscardUnknown() {
	xxx_messageInfo_Predicates.DiscardUnknown(m)
}

var xxx_messageInfo_Predicates proto.InternalMessageInfo

func (m *Predicates) GetPredicates() []*Predicate {
	if m != nil {
		return m.Predicates
	}
	return nil
}

// Scalar represents a constant value.
type Scalar struct {
	// Types that are valid to be assigned to Value:
	//	*Scalar_Bool
	//	*Scalar_U64
	//	*Scalar_U32
	Value                isScalar_Value `protobuf_oneof:"value"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Scalar) Reset()         { *m = Scalar{} }
func (m *Scalar) String() string { return proto.CompactTextString(m) }
func (*Scalar) ProtoMessage()    {}
func (*Scalar) Descriptor() ([]byte, []int) {
	return fileDescriptor_5c6ac9b241082464, []int{6}
}

func (m *Scalar) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Scalar.Unmarshal(m, b)
}
func (m *Scalar) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Scalar.Marshal(b, m, deterministic)
}
func (m *Scalar) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Scalar.Merge(m, src)
}
func (m *Scalar) XXX_Size() int {
	return xxx_messageInfo_Scalar.Size(m)
}
func (m *Scalar) XXX_DiscardUnknown() {
	xxx_messageInfo_Scalar.DiscardUnknown(m)
}

var xxx_messageInfo_Scalar proto.InternalMessageInfo

type isScalar_Value interface {
	isScalar_Value()
}

type Scalar_Bool struct {
	Bool bool `protobuf:"varint,1,opt,name=bool,proto3,oneof"`
}

type Scalar_U64 struct {
	U64 uint64 `protobuf:"varint,3,opt,name=u64,proto3,oneof"`
}

type Scalar_U32 struct {
	U32 uint32 `protobuf:"varint,4,opt,name=u32,proto3,oneof"`
}

func (*Scalar_Bool) isScalar_Value() {}

func (*Scalar_U64) isScalar_Value() {}

func (*Scalar_U32) isScalar_Value() {}

func (m *Scalar) GetValue() isScalar_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Scalar) GetBool() bool {
	if x, ok := m.GetValue().(*Scalar_Bool); ok {
		return x.Bool
	}
	return false
}

func (m *Scalar) GetU64() uint64 {
	if x, ok := m.GetValue().(*Scalar_U64); ok {
		return x.U64
	}
	return 0
}

func (m *Scalar) GetU32() uint32 {
	if x, ok := m.GetValue().(*Scalar_U32); ok {
		return x.U32
	}
	return 0
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Scalar) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Scalar_OneofMarshaler, _Scalar_OneofUnmarshaler, _Scalar_OneofSizer, []interface{}{
		(*Scalar_Bool)(nil),
		(*Scalar_U64)(nil),
		(*Scalar_U32)(nil),
	}
}

func _Scalar_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Scalar)
	// value
	switch x := m.Value.(type) {
	case *Scalar_Bool:
		t := uint64(0)
		if x.Bool {
			t = 1
		}
		b.EncodeVarint(1<<3 | proto.WireVarint)
		b.EncodeVarint(t)
	case *Scalar_U64:
		b.EncodeVarint(3<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.U64))
	case *Scalar_U32:
		b.EncodeVarint(4<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.U32))
	case nil:
	default:
		return fmt.Errorf("Scalar.Value has unexpected type %T", x)
	}
	return nil
}

func _Scalar_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Scalar)
	switch tag {
	case 1: // value.bool
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Value = &Scalar_Bool{x != 0}
		return true, err
	case 3: // value.u64
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Value = &Scalar_U64{x}
		return true, err
	case 4: // value.u32
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Value = &Scalar_U32{uint32(x)}
		return true, err
	default:
		return false, nil
	}
}

func _Scalar_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Scalar)
	// value
	switch x := m.Value.(type) {
	case *Scalar_Bool:
		n += 1 // tag and wire
		n += 1
	case *Scalar_U64:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(x.U64))
	case *Scalar_U32:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(x.U32))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// BinaryOperation is an operation performed between two expressions.
type BinaryOperation struct {
	// left is the left-hand side of the expression.
	Left *Expression `protobuf:"bytes,1,opt,name=left,proto3" json:"left,omitempty"`
	// binary_op_code is the operation to perform on the left and right hand sides.
	BinaryOpCode BinaryOpCode `protobuf:"varint,2,opt,name=binary_op_code,json=binaryOpCode,proto3,enum=BinaryOpCode" json:"binary_op_code,omitempty"`
	// right is the right-hand side of the expression.
	Right                *Expression `protobuf:"bytes,3,opt,name=right,proto3" json:"right,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *BinaryOperation) Reset()         { *m = BinaryOperation{} }
func (m *BinaryOperation) String() string { return proto.CompactTextString(m) }
func (*BinaryOperation) ProtoMessage()    {}
func (*BinaryOperation) Descriptor() ([]byte, []int) {
	return fileDescriptor_5c6ac9b241082464, []int{7}
}

func (m *BinaryOperation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BinaryOperation.Unmarshal(m, b)
}
func (m *BinaryOperation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BinaryOperation.Marshal(b, m, deterministic)
}
func (m *BinaryOperation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BinaryOperation.Merge(m, src)
}
func (m *BinaryOperation) XXX_Size() int {
	return xxx_messageInfo_BinaryOperation.Size(m)
}
func (m *BinaryOperation) XXX_DiscardUnknown() {
	xxx_messageInfo_BinaryOperation.DiscardUnknown(m)
}

var xxx_messageInfo_BinaryOperation proto.InternalMessageInfo

func (m *BinaryOperation) GetLeft() *Expression {
	if m != nil {
		return m.Left
	}
	return nil
}

func (m *BinaryOperation) GetBinaryOpCode() BinaryOpCode {
	if m != nil {
		return m.BinaryOpCode
	}
	return BinaryOpCode_BINARY_OP_CODE_UNKNOWN
}

func (m *BinaryOperation) GetRight() *Expression {
	if m != nil {
		return m.Right
	}
	return nil
}

// Value is a value contained with binary data.
type Value struct {
	// Jump indicates the position of the data for this expression.
	Jump *Jump `protobuf:"bytes,1,opt,name=jump,proto3" json:"jump,omitempty"`
	// type is the type of data pointed to.
	Type                 ValueType `protobuf:"varint,2,opt,name=type,proto3,enum=ValueType" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Value) Reset()         { *m = Value{} }
func (m *Value) String() string { return proto.CompactTextString(m) }
func (*Value) ProtoMessage()    {}
func (*Value) Descriptor() ([]byte, []int) {
	return fileDescriptor_5c6ac9b241082464, []int{8}
}

func (m *Value) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Value.Unmarshal(m, b)
}
func (m *Value) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Value.Marshal(b, m, deterministic)
}
func (m *Value) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Value.Merge(m, src)
}
func (m *Value) XXX_Size() int {
	return xxx_messageInfo_Value.Size(m)
}
func (m *Value) XXX_DiscardUnknown() {
	xxx_messageInfo_Value.DiscardUnknown(m)
}

var xxx_messageInfo_Value proto.InternalMessageInfo

func (m *Value) GetJump() *Jump {
	if m != nil {
		return m.Jump
	}
	return nil
}

func (m *Value) GetType() ValueType {
	if m != nil {
		return m.Type
	}
	return ValueType_VALUE_TYPE_UNKNOWN
}

// Jump defines a tree of jump-style lookups on data.
// ex:
//  Jump{offset:8} means that the position of the data is at position 8.
//  Jump{u64:8} means that the position of the data is at the u64 value decoded at position 8.
type Jump struct {
	// jump defines what kind of jump to perform.
	//
	// Types that are valid to be assigned to Jump:
	//	*Jump_Offset
	//	*Jump_U64Le
	//	*Jump_U64Be
	//	*Jump_U32Le
	//	*Jump_U32Be
	//	*Jump_U16Le
	//	*Jump_U16Be
	//	*Jump_U8
	Jump                 isJump_Jump `protobuf_oneof:"jump"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Jump) Reset()         { *m = Jump{} }
func (m *Jump) String() string { return proto.CompactTextString(m) }
func (*Jump) ProtoMessage()    {}
func (*Jump) Descriptor() ([]byte, []int) {
	return fileDescriptor_5c6ac9b241082464, []int{9}
}

func (m *Jump) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Jump.Unmarshal(m, b)
}
func (m *Jump) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Jump.Marshal(b, m, deterministic)
}
func (m *Jump) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Jump.Merge(m, src)
}
func (m *Jump) XXX_Size() int {
	return xxx_messageInfo_Jump.Size(m)
}
func (m *Jump) XXX_DiscardUnknown() {
	xxx_messageInfo_Jump.DiscardUnknown(m)
}

var xxx_messageInfo_Jump proto.InternalMessageInfo

type isJump_Jump interface {
	isJump_Jump()
}

type Jump_Offset struct {
	Offset uint64 `protobuf:"varint,1,opt,name=offset,proto3,oneof"`
}

type Jump_U64Le struct {
	U64Le uint64 `protobuf:"varint,2,opt,name=u64le,proto3,oneof"`
}

type Jump_U64Be struct {
	U64Be uint64 `protobuf:"varint,3,opt,name=u64be,proto3,oneof"`
}

type Jump_U32Le struct {
	U32Le uint64 `protobuf:"varint,4,opt,name=u32le,proto3,oneof"`
}

type Jump_U32Be struct {
	U32Be uint64 `protobuf:"varint,5,opt,name=u32be,proto3,oneof"`
}

type Jump_U16Le struct {
	U16Le uint64 `protobuf:"varint,6,opt,name=u16le,proto3,oneof"`
}

type Jump_U16Be struct {
	U16Be uint64 `protobuf:"varint,7,opt,name=u16be,proto3,oneof"`
}

type Jump_U8 struct {
	U8 uint64 `protobuf:"varint,8,opt,name=u8,proto3,oneof"`
}

func (*Jump_Offset) isJump_Jump() {}

func (*Jump_U64Le) isJump_Jump() {}

func (*Jump_U64Be) isJump_Jump() {}

func (*Jump_U32Le) isJump_Jump() {}

func (*Jump_U32Be) isJump_Jump() {}

func (*Jump_U16Le) isJump_Jump() {}

func (*Jump_U16Be) isJump_Jump() {}

func (*Jump_U8) isJump_Jump() {}

func (m *Jump) GetJump() isJump_Jump {
	if m != nil {
		return m.Jump
	}
	return nil
}

func (m *Jump) GetOffset() uint64 {
	if x, ok := m.GetJump().(*Jump_Offset); ok {
		return x.Offset
	}
	return 0
}

func (m *Jump) GetU64Le() uint64 {
	if x, ok := m.GetJump().(*Jump_U64Le); ok {
		return x.U64Le
	}
	return 0
}

func (m *Jump) GetU64Be() uint64 {
	if x, ok := m.GetJump().(*Jump_U64Be); ok {
		return x.U64Be
	}
	return 0
}

func (m *Jump) GetU32Le() uint64 {
	if x, ok := m.GetJump().(*Jump_U32Le); ok {
		return x.U32Le
	}
	return 0
}

func (m *Jump) GetU32Be() uint64 {
	if x, ok := m.GetJump().(*Jump_U32Be); ok {
		return x.U32Be
	}
	return 0
}

func (m *Jump) GetU16Le() uint64 {
	if x, ok := m.GetJump().(*Jump_U16Le); ok {
		return x.U16Le
	}
	return 0
}

func (m *Jump) GetU16Be() uint64 {
	if x, ok := m.GetJump().(*Jump_U16Be); ok {
		return x.U16Be
	}
	return 0
}

func (m *Jump) GetU8() uint64 {
	if x, ok := m.GetJump().(*Jump_U8); ok {
		return x.U8
	}
	return 0
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Jump) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Jump_OneofMarshaler, _Jump_OneofUnmarshaler, _Jump_OneofSizer, []interface{}{
		(*Jump_Offset)(nil),
		(*Jump_U64Le)(nil),
		(*Jump_U64Be)(nil),
		(*Jump_U32Le)(nil),
		(*Jump_U32Be)(nil),
		(*Jump_U16Le)(nil),
		(*Jump_U16Be)(nil),
		(*Jump_U8)(nil),
	}
}

func _Jump_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Jump)
	// jump
	switch x := m.Jump.(type) {
	case *Jump_Offset:
		b.EncodeVarint(1<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.Offset))
	case *Jump_U64Le:
		b.EncodeVarint(2<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.U64Le))
	case *Jump_U64Be:
		b.EncodeVarint(3<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.U64Be))
	case *Jump_U32Le:
		b.EncodeVarint(4<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.U32Le))
	case *Jump_U32Be:
		b.EncodeVarint(5<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.U32Be))
	case *Jump_U16Le:
		b.EncodeVarint(6<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.U16Le))
	case *Jump_U16Be:
		b.EncodeVarint(7<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.U16Be))
	case *Jump_U8:
		b.EncodeVarint(8<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.U8))
	case nil:
	default:
		return fmt.Errorf("Jump.Jump has unexpected type %T", x)
	}
	return nil
}

func _Jump_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Jump)
	switch tag {
	case 1: // jump.offset
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Jump = &Jump_Offset{x}
		return true, err
	case 2: // jump.u64le
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Jump = &Jump_U64Le{x}
		return true, err
	case 3: // jump.u64be
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Jump = &Jump_U64Be{x}
		return true, err
	case 4: // jump.u32le
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Jump = &Jump_U32Le{x}
		return true, err
	case 5: // jump.u32be
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Jump = &Jump_U32Be{x}
		return true, err
	case 6: // jump.u16le
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Jump = &Jump_U16Le{x}
		return true, err
	case 7: // jump.u16be
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Jump = &Jump_U16Be{x}
		return true, err
	case 8: // jump.u8
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Jump = &Jump_U8{x}
		return true, err
	default:
		return false, nil
	}
}

func _Jump_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Jump)
	// jump
	switch x := m.Jump.(type) {
	case *Jump_Offset:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(x.Offset))
	case *Jump_U64Le:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(x.U64Le))
	case *Jump_U64Be:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(x.U64Be))
	case *Jump_U32Le:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(x.U32Le))
	case *Jump_U32Be:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(x.U32Be))
	case *Jump_U16Le:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(x.U16Le))
	case *Jump_U16Be:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(x.U16Be))
	case *Jump_U8:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(x.U8))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

var E_ReturnType = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.FieldOptions)(nil),
	ExtensionType: (*ReturnType)(nil),
	Field:         1001,
	Name:          "return_type",
	Tag:           "varint,1001,opt,name=return_type,enum=ReturnType",
	Filename:      "query.proto",
}

var E_Endianness = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.FieldOptions)(nil),
	ExtensionType: (*Endianness)(nil),
	Field:         1002,
	Name:          "endianness",
	Tag:           "varint,1002,opt,name=endianness,enum=Endianness",
	Filename:      "query.proto",
}

var E_EnumReturnType = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.EnumValueOptions)(nil),
	ExtensionType: (*ReturnType)(nil),
	Field:         1001,
	Name:          "enum_return_type",
	Tag:           "varint,1001,opt,name=enum_return_type,enum=ReturnType",
	Filename:      "query.proto",
}

var E_EnumEndianness = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.EnumValueOptions)(nil),
	ExtensionType: (*Endianness)(nil),
	Field:         1002,
	Name:          "enum_endianness",
	Tag:           "varint,1002,opt,name=enum_endianness,enum=Endianness",
	Filename:      "query.proto",
}

func init() {
	proto.RegisterEnum("ReturnType", ReturnType_name, ReturnType_value)
	proto.RegisterEnum("Endianness", Endianness_name, Endianness_value)
	proto.RegisterEnum("BinaryOpCode", BinaryOpCode_name, BinaryOpCode_value)
	proto.RegisterEnum("ValueType", ValueType_name, ValueType_value)
	proto.RegisterType((*Query)(nil), "Query")
	proto.RegisterType((*Options)(nil), "Options")
	proto.RegisterType((*Predicate)(nil), "Predicate")
	proto.RegisterType((*Expression)(nil), "Expression")
	proto.RegisterType((*Expressions)(nil), "Expressions")
	proto.RegisterType((*Predicates)(nil), "Predicates")
	proto.RegisterType((*Scalar)(nil), "Scalar")
	proto.RegisterType((*BinaryOperation)(nil), "BinaryOperation")
	proto.RegisterType((*Value)(nil), "Value")
	proto.RegisterType((*Jump)(nil), "Jump")
	proto.RegisterExtension(E_ReturnType)
	proto.RegisterExtension(E_Endianness)
	proto.RegisterExtension(E_EnumReturnType)
	proto.RegisterExtension(E_EnumEndianness)
}

func init() { proto.RegisterFile("query.proto", fileDescriptor_5c6ac9b241082464) }

var fileDescriptor_5c6ac9b241082464 = []byte{
	// 1008 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x95, 0xdd, 0x4e, 0xe3, 0x46,
	0x14, 0xc7, 0xe3, 0xcf, 0xc0, 0x49, 0x80, 0xd9, 0x81, 0xb2, 0x5e, 0xba, 0x5d, 0xc0, 0x52, 0x25,
	0x84, 0xba, 0x46, 0x38, 0x28, 0x42, 0xa8, 0x45, 0xc2, 0xbb, 0xee, 0x42, 0x37, 0x4a, 0x60, 0x08,
	0xdb, 0xd2, 0x8b, 0x46, 0x31, 0x19, 0x58, 0x57, 0xc6, 0xce, 0xfa, 0xa3, 0x2a, 0x6f, 0x50, 0xf5,
	0xa2, 0x0f, 0x50, 0xf5, 0x81, 0x50, 0xaf, 0xfa, 0x1a, 0xad, 0x7a, 0xd9, 0x07, 0xa8, 0x66, 0xc6,
	0x49, 0x86, 0xc0, 0xb6, 0x7b, 0xe7, 0xf3, 0xff, 0xfd, 0xe7, 0xf8, 0x9c, 0x33, 0xc7, 0x32, 0xd4,
	0xde, 0x15, 0x34, 0xbd, 0x71, 0x86, 0x69, 0x92, 0x27, 0x2b, 0x9f, 0xe5, 0x6f, 0xc3, 0x74, 0xd0,
	0x1b, 0xf6, 0xd3, 0xfc, 0x66, 0xeb, 0x2a, 0x49, 0xae, 0x22, 0xba, 0xc5, 0x49, 0x50, 0x5c, 0x6e,
	0x0d, 0x68, 0x76, 0x91, 0x86, 0xc3, 0x3c, 0x49, 0x85, 0xdb, 0xfe, 0x49, 0x01, 0xe3, 0x84, 0x9d,
	0xc6, 0x4b, 0x60, 0x64, 0x79, 0x3f, 0xcd, 0x2d, 0x65, 0x4d, 0xd9, 0xa8, 0x13, 0x11, 0x60, 0x04,
	0x1a, 0x8d, 0x07, 0x96, 0xca, 0x35, 0xf6, 0x88, 0x9f, 0xc3, 0x1c, 0x7f, 0x5d, 0x2f, 0x19, 0xe6,
	0x61, 0x12, 0x67, 0x96, 0xb6, 0xa6, 0x6c, 0xd4, 0xdc, 0x19, 0xa7, 0x23, 0x62, 0x52, 0xe7, 0xb8,
	0x8c, 0xf0, 0x06, 0xcc, 0x0e, 0x53, 0x3a, 0x08, 0x2f, 0xfa, 0x39, 0xb5, 0x74, 0x6e, 0x05, 0xe7,
	0x78, 0xa4, 0x90, 0x09, 0xb4, 0x57, 0xa1, 0x3a, 0x3a, 0xb4, 0x04, 0x46, 0x14, 0x5e, 0x87, 0xa2,
	0x16, 0x9d, 0x88, 0xc0, 0xfe, 0x55, 0x81, 0xd9, 0xf1, 0x49, 0xec, 0x02, 0xd0, 0x1f, 0x87, 0x29,
	0xcd, 0xb2, 0x30, 0x89, 0xb9, 0xb1, 0xe6, 0xd6, 0x1c, 0x7f, 0x2c, 0x79, 0xda, 0xed, 0xbe, 0x72,
	0x58, 0x21, 0x92, 0x0b, 0x7f, 0x0a, 0x5a, 0x3f, 0xbe, 0xe1, 0xdd, 0xd4, 0xdc, 0xba, 0x64, 0xce,
	0x46, 0x6e, 0xc6, 0xb9, 0x2d, 0x8a, 0xca, 0xc6, 0xde, 0x63, 0x8b, 0x22, 0xaf, 0x26, 0xb5, 0x66,
	0xff, 0xa6, 0x00, 0x4c, 0x8c, 0xf8, 0x0b, 0x40, 0x41, 0x18, 0xf7, 0xf9, 0x98, 0x68, 0xda, 0xcf,
	0x27, 0x35, 0x22, 0xc7, 0xe3, 0xa0, 0x33, 0xd2, 0x0f, 0x2b, 0x64, 0x21, 0xb8, 0x2b, 0xe1, 0x67,
	0x60, 0xfc, 0xd0, 0x8f, 0x0a, 0x5a, 0x96, 0x6a, 0x3a, 0x6f, 0x58, 0x74, 0x58, 0x21, 0x42, 0xc6,
	0xeb, 0x60, 0x66, 0x17, 0xfd, 0xa8, 0x9f, 0x96, 0x45, 0x56, 0x9d, 0x53, 0x1e, 0x1e, 0x56, 0x48,
	0x09, 0xbc, 0xba, 0x3c, 0x1f, 0xfb, 0x73, 0xa8, 0x49, 0x6d, 0xe0, 0xe7, 0x50, 0x9b, 0xc0, 0xcc,
	0x52, 0xd6, 0xb4, 0xa9, 0xe9, 0x11, 0x99, 0xdb, 0xbb, 0x00, 0xe3, 0xc1, 0x67, 0x78, 0x13, 0x60,
	0xdc, 0xf7, 0xe8, 0xac, 0x7c, 0xa7, 0x12, 0xb5, 0xbf, 0x03, 0x53, 0x54, 0x86, 0x9f, 0x80, 0x1e,
	0x24, 0x49, 0xc4, 0xa7, 0x30, 0x33, 0x9a, 0x23, 0x97, 0xf0, 0x63, 0xd0, 0x8a, 0xe6, 0x0e, 0x6f,
	0x45, 0x67, 0x44, 0x65, 0x13, 0x2e, 0x9a, 0x3b, 0x1c, 0x34, 0x5c, 0xbe, 0x36, 0x73, 0x0c, 0x68,
	0x1c, 0x34, 0x5c, 0xaf, 0x5a, 0xce, 0xc7, 0xfe, 0x59, 0x81, 0x85, 0xa9, 0x79, 0xe2, 0x55, 0xd0,
	0x23, 0x7a, 0x99, 0x3f, 0xb0, 0x13, 0x84, 0x03, 0xdc, 0x80, 0xf9, 0xf1, 0xe5, 0xf4, 0x2e, 0x92,
	0x81, 0x18, 0xf3, 0xbc, 0x3b, 0x37, 0xbe, 0x9a, 0x17, 0xc9, 0x80, 0x92, 0x7a, 0x20, 0x45, 0x78,
	0x1d, 0x8c, 0x34, 0xbc, 0x7a, 0x9b, 0x97, 0x13, 0xbf, 0x93, 0x56, 0x10, 0xdb, 0x03, 0x83, 0xdf,
	0x13, 0xeb, 0xf5, 0xfb, 0xe2, 0x7a, 0x58, 0x56, 0x60, 0x38, 0x5f, 0x15, 0xd7, 0x43, 0xc2, 0x25,
	0xfc, 0x0c, 0xf4, 0xfc, 0x66, 0x38, 0x7a, 0x23, 0x88, 0x8b, 0xed, 0xde, 0x0c, 0x29, 0xe1, 0xba,
	0xfd, 0xbb, 0x02, 0x3a, 0xb3, 0x63, 0x0b, 0xcc, 0xe4, 0xf2, 0x32, 0xa3, 0xe5, 0x47, 0xc0, 0x6e,
	0x56, 0xc4, 0x78, 0x19, 0x8c, 0xa2, 0xb9, 0x13, 0x89, 0x1c, 0x0c, 0x88, 0xb0, 0xd4, 0x03, 0x2a,
	0x06, 0x59, 0xea, 0x81, 0xd0, 0x1b, 0x6e, 0x24, 0x3e, 0x3f, 0xa1, 0xb3, 0xb0, 0xd4, 0x03, 0x6a,
	0x19, 0x92, 0x5e, 0xfa, 0xb7, 0x9b, 0x11, 0xb5, 0xcc, 0xb1, 0xce, 0xc2, 0x52, 0x0f, 0xa8, 0x55,
	0x95, 0xf4, 0x80, 0x62, 0x04, 0x6a, 0xb1, 0x6b, 0xcd, 0x94, 0xa2, 0x5a, 0xec, 0x7a, 0xa6, 0xe8,
	0x7f, 0xf3, 0x17, 0x05, 0x80, 0xd0, 0xbc, 0x48, 0x63, 0xd6, 0x21, 0x7e, 0x0c, 0x8b, 0xc4, 0xef,
	0x9e, 0x91, 0x76, 0xaf, 0x7b, 0x7e, 0xec, 0xf7, 0xce, 0xda, 0xaf, 0xdb, 0x9d, 0xaf, 0xdb, 0xa8,
	0x82, 0x97, 0x00, 0xc9, 0xc0, 0xeb, 0x74, 0x5a, 0x48, 0xc1, 0x8b, 0xb0, 0x70, 0xc7, 0xde, 0xdc,
	0x41, 0xea, 0x3d, 0xb1, 0xe1, 0x22, 0xed, 0x9e, 0xb8, 0xdd, 0x44, 0x3a, 0xc6, 0x30, 0x7f, 0x47,
	0xdc, 0x45, 0xc6, 0x66, 0x07, 0xc0, 0x8f, 0x07, 0x61, 0x3f, 0x8e, 0x69, 0x96, 0xe1, 0x65, 0xc0,
	0x7e, 0xfb, 0xe5, 0xd1, 0x41, 0xbb, 0xed, 0x9f, 0x9e, 0x4a, 0xe5, 0x7c, 0x04, 0x8f, 0x24, 0xbd,
	0x75, 0xd4, 0xed, 0xb6, 0x7c, 0xa4, 0xb0, 0x84, 0x92, 0xec, 0x1d, 0xbd, 0x42, 0xea, 0xe6, 0xdf,
	0x0a, 0xd4, 0xe5, 0xa5, 0xc1, 0xab, 0xb0, 0xec, 0x1d, 0xb5, 0x0f, 0xc8, 0x79, 0xaf, 0x73, 0xdc,
	0x7b, 0xd1, 0x79, 0x29, 0xb5, 0xb9, 0xa2, 0xdd, 0xee, 0x57, 0xf0, 0x0a, 0x3c, 0x9a, 0x32, 0xf8,
	0x27, 0x48, 0x61, 0x4c, 0xc1, 0x1f, 0x03, 0x9e, 0x62, 0x6d, 0xff, 0x04, 0xa9, 0x02, 0x3e, 0x85,
	0xc5, 0x29, 0xd8, 0xf2, 0x4f, 0x4f, 0x91, 0x26, 0xe8, 0xfd, 0xf7, 0x32, 0xca, 0x72, 0xeb, 0xef,
	0x33, 0xbc, 0x22, 0xfe, 0x41, 0xd7, 0x27, 0xc8, 0x10, 0x06, 0x1b, 0x9e, 0x3c, 0x6c, 0x60, 0x49,
	0x4c, 0xee, 0xd9, 0xfc, 0x47, 0x81, 0xd9, 0xf1, 0xc6, 0xb2, 0x72, 0xdf, 0x1c, 0xb4, 0xce, 0xfc,
	0xa9, 0xeb, 0x14, 0x7d, 0x3e, 0x05, 0x24, 0xc3, 0xe6, 0x0e, 0x9b, 0xe1, 0x8a, 0x79, 0xbb, 0xaf,
	0xfe, 0xc1, 0x9b, 0x99, 0xa2, 0x9e, 0x8f, 0xd4, 0x92, 0xaa, 0xd3, 0xb4, 0xe1, 0xb6, 0x7c, 0xa4,
	0x31, 0xaa, 0x3d, 0x70, 0xb6, 0xe1, 0x7a, 0x3e, 0xd2, 0x4b, 0x7a, 0xef, 0xec, 0x76, 0xb3, 0xe5,
	0x23, 0x83, 0x51, 0xfd, 0x81, 0xb3, 0xdb, 0x4d, 0xcf, 0x47, 0x66, 0x49, 0x55, 0xbc, 0x0c, 0x73,
	0x32, 0xdd, 0x45, 0x55, 0xd6, 0x8b, 0xb1, 0xd7, 0x82, 0x5a, 0xca, 0xd7, 0xb8, 0xc7, 0xbe, 0x51,
	0xfc, 0x89, 0x23, 0xfe, 0xab, 0xce, 0xe8, 0xbf, 0xea, 0x7c, 0x19, 0xd2, 0x68, 0x50, 0xfe, 0xbd,
	0xac, 0x3f, 0xab, 0xfc, 0xdb, 0xae, 0x39, 0x93, 0xd5, 0x27, 0x90, 0x8e, 0x9f, 0xf7, 0x5e, 0x03,
	0xd0, 0xc9, 0x12, 0xfe, 0x4f, 0xb2, 0xbf, 0x46, 0xc9, 0x26, 0x7b, 0x4b, 0xa4, 0xe3, 0x7b, 0xe7,
	0x80, 0x68, 0x5c, 0x5c, 0xf7, 0xe4, 0xfa, 0xd6, 0xef, 0xa5, 0xf4, 0xe3, 0xe2, 0x9a, 0xdf, 0xdb,
	0x7f, 0xd5, 0x38, 0xcf, 0x12, 0x4d, 0xe2, 0xbd, 0x6f, 0x60, 0x81, 0xa7, 0x96, 0x8a, 0xfd, 0x80,
	0xcc, 0x0f, 0x15, 0xcc, 0x33, 0x4f, 0x62, 0xcf, 0xfc, 0x56, 0x0f, 0xc2, 0xf8, 0x5d, 0x60, 0xf2,
	0x34, 0x8d, 0x7f, 0x03, 0x00, 0x00, 0xff, 0xff, 0x4b, 0x1d, 0xbb, 0xeb, 0xc1, 0x08, 0x00, 0x00,
}
